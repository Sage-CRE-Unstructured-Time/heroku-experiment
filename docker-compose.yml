version: '3.9'

services:
  postgres:
    image: postgres:13.3
    restart: always
    environment:
      # These are "magic" environment variables used by the container to create a user
      # Details: https://hub.docker.com/_/postgres
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
    ports:
      - "8080:5432"
    volumes:
      # By mapping the .sql file to the entrypoint for initializing the database, we ensure it gets run 
      # after the database finishes starting up
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # Arbitrary location
      - ./datasets:/var/lib/postgresql/custom-datasets

  flyway:
    image: flyway/flyway:7.9.1
    # These values are based on the postgres container and the init.sql file contents
    # We use connect retries so that we can wait until the database server is ready
    command: > 
      migrate 
        -url=jdbc:postgresql://postgres/datasets 
        -user=docker 
        -password=docker 
        -locations=filesystem:/flyway/sql 
        -connectRetries=60 
    volumes:
      - ./sql:/flyway/sql
    depends_on:
      - postgres
  
  pgadmin:
    image: dpage/pgadmin4:5.3
    depends_on: 
      - postgres
    environment: 
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-user@domain.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-docker}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      # This is a default value which we override with the volume mapping
      # PGADMIN_SERVER_JSON_FILE: '/pgadmin4/servers.json'
    volumes:
      - ./sql/pgadmin_servers.json:/pgadmin4/servers.json
    ports: 
      - "5431:80"
    restart: always